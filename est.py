import streamlit as st
import pandas as pd
from scipy.stats import f_oneway, ttest_rel, ttest_ind, levene
from statsmodels.stats.multicomp import pairwise_tukeyhsd
import matplotlib.pyplot as plt
import seaborn as sns

# Configura√ß√µes gerais do Streamlit
st.set_page_config(layout="wide", page_title="An√°lise Estat√≠stica de Exerc√≠cios")

# --- Inicializa√ß√£o do Session State (CORRIGIDO) ---
# Garante que 'user_custom_name' existe antes de ser usado.
if 'user_custom_name' not in st.session_state:
    st.session_state.user_custom_name = "Di√≥genes Oliveira" # Pode ser seu nome real ou um placeholder

# --- Conte√∫do Principal da Aplica√ß√£o ---
st.title("üìä Aplica√ß√£o de An√°lise Estat√≠stica para Engenheiros")
st.write(f"Ol√°, {st.session_state.user_custom_name}! Esta aplica√ß√£o demonstra a resolu√ß√£o dos exerc√≠cios de testes estat√≠sticos que voc√™ me apresentou, utilizando Python e Streamlit.")
st.write("Explore as an√°lises e visualize os resultados de cada cen√°rio.")

st.markdown("---")

## Fun√ß√£o para o Exerc√≠cio 1: ANOVA (Compara√ß√£o de 3 M√©todos de Ensino)
def run_exercise_1():
    st.header("1. Compara√ß√£o de Tr√™s M√©todos de Ensino (ANOVA)")
    st.markdown("""
    **Problema:** Uma escola est√° testando tr√™s m√©todos diferentes de ensino para melhorar o desempenho dos alunos em matem√°tica.
    Ap√≥s 1 semestre, 5 alunos de cada grupo foram submetidos √† mesma prova de matem√°tica, com pontua√ß√£o de 0 a 100.
    O objetivo √© verificar se h√° diferen√ßa significativa no desempenho m√©dio dos alunos entre os tr√™s m√©todos de ensino (5% de signific√¢ncia).
    """)

    # Dados do problema
    data = {
        'Metodo': ['A'] * 5 + ['B'] * 5 + ['C'] * 5,
        'Pontuacao': [70, 65, 60, 72, 68, 80, 85, 75, 78, 82, 90, 95, 85, 88, 92]
    }
    df = pd.DataFrame(data)

    st.subheader("Dados Brutos:")
    st.dataframe(df)

    st.subheader("Visualiza√ß√£o dos Dados (Box Plot):")
    fig1, ax1 = plt.subplots(figsize=(10, 6))
    sns.boxplot(x='Metodo', y='Pontuacao', data=df, ax=ax1, palette='viridis')
    ax1.set_title('Desempenho dos Alunos por M√©todo de Ensino')
    ax1.set_xlabel('M√©todo de Ensino')
    ax1.set_ylabel('Pontua√ß√£o')
    ax1.grid(axis='y', linestyle='--', alpha=0.7)
    st.pyplot(fig1)
    st.write("O box plot nos permite visualizar a distribui√ß√£o das pontua√ß√µes para cada m√©todo, incluindo medianas, quartis e poss√≠veis outliers. Isso d√° uma primeira impress√£o das diferen√ßas.")

    st.subheader("An√°lise Estat√≠stica: ANOVA")
    st.markdown("""
    Para comparar as m√©dias de tr√™s ou mais grupos independentes, utilizamos a **An√°lise de Vari√¢ncia (ANOVA)**.

    *   **Hip√≥tese Nula (H‚ÇÄ):** As m√©dias de desempenho dos alunos s√£o iguais para os tr√™s m√©todos de ensino (ŒºA = ŒºB = ŒºC).
    *   **Hip√≥tese Alternativa (H‚ÇÅ):** Pelo menos uma das m√©dias de desempenho dos alunos √© diferente das outras.
    *   **N√≠vel de Signific√¢ncia (Œ±):** 0.05 (5%).
    """)

    # Preparar os dados para ANOVA
    metodo_a = df[df['Metodo'] == 'A']['Pontuacao']
    metodo_b = df[df['Metodo'] == 'B']['Pontuacao']
    metodo_c = df[df['Metodo'] == 'C']['Pontuacao']

    # Realizar o teste ANOVA
    f_statistic, p_value = f_oneway(metodo_a, metodo_b, metodo_c)

    st.write(f"**Estat√≠stica F da ANOVA:** `{f_statistic:.2f}`")
    st.write(f"**Valor p da ANOVA:** `{p_value:.3f}`")

    st.subheader("Interpreta√ß√£o dos Resultados da ANOVA:")
    if p_value < 0.05:
        st.success(f"Como o valor p ({p_value:.3f}) √© menor que o n√≠vel de signific√¢ncia (0.05), rejeitamos a Hip√≥tese Nula.")
        st.write("Isso indica que h√° uma **diferen√ßa estatisticamente significativa** no desempenho m√©dio dos alunos entre os m√©todos de ensino. Ou seja, pelo menos um m√©todo difere dos outros.")
        st.subheader("Teste Post-Hoc (Tukey HSD):")
        st.markdown("Para identificar *quais* grupos s√£o diferentes entre si, realizamos um Teste Post-Hoc, como o **Teste de Tukey HSD**.")
        tukey_result = pairwise_tukeyhsd(endog=df['Pontuacao'], groups=df['Metodo'], alpha=0.05)
        st.write(tukey_result)
        st.markdown("""
        Na tabela do Tukey HSD:
        *   `reject=True` indica que h√° uma diferen√ßa significativa entre o par de grupos.
        *   `reject=False` indica que n√£o h√° evid√™ncia de diferen√ßa significativa entre o par de grupos.
        """)
    else:
        st.info(f"Como o valor p ({p_value:.3f}) √© maior ou igual ao n√≠vel de signific√¢ncia (0.05), n√£o rejeitamos a Hip√≥tese Nula.")
        st.write("Isso sugere que n√£o h√° evid√™ncia suficiente para afirmar que existe uma diferen√ßa significativa no desempenho m√©dio dos alunos entre os m√©todos de ensino.")
    st.markdown("---")

## Fun√ß√£o para o Exerc√≠cio 2: Teste t Pareado (Programa de Refor√ßo)
def run_exercise_2():
    st.header("2. Efetividade de um Programa de Refor√ßo (Teste t Pareado)")
    st.markdown("""
    **Problema:** Uma escola aplica um programa intensivo de refor√ßo por 8 semanas para melhorar a nota em matem√°tica de 10 alunos. As notas foram registradas antes (pr√©) e depois (p√≥s) do programa.
    O objetivo √© verificar se o Programa foi efetivo (5% de signific√¢ncia).
    """)

    # Dados do problema
    data_prog = {
        'Aluno': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
        'Pre': [65, 70, 68, 72, 60, 75, 69, 71, 66, 64],
        'Pos': [70, 74, 72, 78, 65, 80, 73, 75, 70, 68]
    }
    df_prog = pd.DataFrame(data_prog)
    df_prog['Diferenca'] = df_prog['Pos'] - df_prog['Pre']

    st.subheader("Dados Brutos:")
    st.dataframe(df_prog)

    st.subheader("Visualiza√ß√£o dos Dados (Mudan√ßa Individual Pr√©-P√≥s):")
    fig2, ax2 = plt.subplots(figsize=(10, 6))
    for index, row in df_prog.iterrows():
        ax2.plot([0, 1], [row['Pre'], row['Pos']], color='gray', linestyle='-', marker='o', alpha=0.6)
        ax2.text(0, row['Pre'], f"({row['Pre']})", ha='right', va='center', fontsize=8, color='blue')
        ax2.text(1, row['Pos'], f"({row['Pos']})", ha='left', va='center', fontsize=8, color='green')
    ax2.set_xticks([0, 1])
    ax2.set_xticklabels(['Pr√©-Programa', 'P√≥s-Programa'])
    ax2.set_xlim(-0.1, 1.1)
    ax2.set_title('Mudan√ßa na Pontua√ß√£o de Matem√°tica por Aluno')
    ax2.set_ylabel('Pontua√ß√£o')
    ax2.grid(axis='y', linestyle='--', alpha=0.7)
    st.pyplot(fig2)
    st.write("Este gr√°fico mostra a mudan√ßa individual para cada aluno. Uma linha ascendente indica melhora, descendente indica piora.")


    st.subheader("An√°lise Estat√≠stica: Teste t para Amostras Pareadas")
    st.markdown("""
    Para comparar as m√©dias de duas amostras relacionadas (os mesmos indiv√≠duos medidos antes e depois de uma interven√ß√£o), utilizamos o **Teste t para Amostras Pareadas**.

    *   **Hip√≥tese Nula (H‚ÇÄ):** A m√©dia das diferen√ßas (P√≥s - Pr√©) √© igual a zero (Œº_diff = 0). O programa n√£o teve efeito.
    *   **Hip√≥tese Alternativa (H‚ÇÅ):** A m√©dia das diferen√ßas (P√≥s - Pr√©) √© maior que zero (Œº_diff > 0). O programa foi efetivo em aumentar as notas (teste unilateral).
    *   **N√≠vel de Signific√¢ncia (Œ±):** 0.05 (5%).
    """)

    # Realizar o Teste t Pareado
    t_statistic, p_value_bilateral = ttest_rel(df_prog['Pos'], df_prog['Pre'])

    # Para teste unilateral (H1: Pos > Pre), dividimos o p-value bilateral por 2
    # e verificamos a dire√ß√£o da m√©dia das diferen√ßas.
    mean_diff = df_prog['Diferenca'].mean()
    if mean_diff > 0:
        p_value_unilateral = p_value_bilateral / 2
    else:
        p_value_unilateral = 1 - (p_value_bilateral / 2) # Se a m√©dia da diferen√ßa for negativa ou zero, n√£o h√° suporte para H1

    st.write(f"**Estat√≠stica t do Teste Pareado:** `{t_statistic:.2f}`")
    st.write(f"**Valor p (unilateral) do Teste Pareado:** `{p_value_unilateral:.3f}`")

    st.subheader("Interpreta√ß√£o dos Resultados do Teste t Pareado:")
    if p_value_unilateral < 0.05 and mean_diff > 0:
        st.success(f"Como o valor p unilateral ({p_value_unilateral:.3f}) √© menor que o n√≠vel de signific√¢ncia (0.05) e a m√©dia das diferen√ßas √© positiva ({mean_diff:.2f}), rejeitamos a Hip√≥tese Nula.")
        st.write("Isso indica que o programa de refor√ßo foi **estatisticamente efetivo** em aumentar as notas dos alunos.")
    else:
        st.info(f"Como o valor p unilateral ({p_value_unilateral:.3f}) √© maior ou igual ao n√≠vel de signific√¢ncia (0.05), ou a m√©dia das diferen√ßas n√£o √© positiva, n√£o rejeitamos a Hip√≥tese Nula.")
        st.write("Isso sugere que n√£o h√° evid√™ncia suficiente para afirmar que o programa de refor√ßo foi efetivo em aumentar as notas.")
    st.markdown("---")

## Fun√ß√£o para o Exerc√≠cio 3: Teste t Independente (Grupo Experimental vs. Controle)
def run_exercise_3():
    st.header("3. Avalia√ß√£o de Novo M√©todo de Ensino (Grupo Experimental vs. Controle - Teste t Independente)")
    st.markdown("""
    **Problema:** Uma escola quer avaliar se um novo m√©todo de ensino (Grupo A ‚Äî m√©todo experimental) aumenta as notas de matem√°tica em compara√ß√£o ao m√©todo tradicional (Grupo B ‚Äî controle). Foram selecionados 8 alunos aleatoriamente para cada grupo e, ap√≥s o curso, aplicou-se um teste padronizado de matem√°tica.
    N√≠vel de signific√¢ncia: Œ± = 0,05.
    """)

    # Dados do problema
    grupo_a = [78, 82, 85, 90, 74, 88, 79, 84]
    grupo_b = [72, 75, 70, 68, 74, 69, 73, 71]

    # Criar DataFrame para visualiza√ß√£o
    df_grupos = pd.DataFrame({
        'Grupo': ['A'] * len(grupo_a) + ['B'] * len(grupo_b),
        'Pontuacao': grupo_a + grupo_b
    })

    st.subheader("Dados Brutos:")
    st.write("Grupo A (Experimental):", grupo_a)
    st.write("Grupo B (Controle):", grupo_b)
    st.dataframe(df_grupos)

    st.subheader("Visualiza√ß√£o dos Dados (Box Plot):")
    fig3, ax3 = plt.subplots(figsize=(10, 6))
    sns.boxplot(x='Grupo', y='Pontuacao', data=df_grupos, ax=ax3, palette='coolwarm')
    ax3.set_title('Compara√ß√£o de Pontua√ß√µes entre Grupo Experimental (A) e Controle (B)')
    ax3.set_xlabel('Grupo de Ensino')
    ax3.set_ylabel('Pontua√ß√£o')
    ax3.grid(axis='y', linestyle='--', alpha=0.7)
    st.pyplot(fig3)
    st.write("O box plot permite comparar as distribui√ß√µes de pontua√ß√£o e as medianas de ambos os grupos.")

    st.subheader("An√°lise Estat√≠stica: Teste t para Amostras Independentes")
    st.markdown("""
    Para comparar as m√©dias de dois grupos independentes, utilizamos o **Teste t para Amostras Independentes**. Antes, verificamos a homogeneidade das vari√¢ncias com o Teste de Levene.

    *   **Hip√≥tese Nula (H‚ÇÄ):** A m√©dia de pontua√ß√£o do Grupo A √© menor ou igual √† m√©dia de pontua√ß√£o do Grupo B (ŒºA ‚â§ ŒºB). N√£o h√° aumento nas notas.
    *   **Hip√≥tese Alternativa (H‚ÇÅ):** A m√©dia de pontua√ß√£o do Grupo A √© maior que a m√©dia de pontua√ß√£o do Grupo B (ŒºA > ŒºB). O novo m√©todo aumenta as notas (teste unilateral).
    *   **N√≠vel de Signific√¢ncia (Œ±):** 0.05 (5%).
    """)

    st.markdown("### Verifica√ß√£o de Homogeneidade das Vari√¢ncias (Teste de Levene):")
    stat_levene, p_levene = levene(grupo_a, grupo_b)
    st.write(f"**Estat√≠stica de Levene:** `{stat_levene:.2f}`")
    st.write(f"**Valor p do Teste de Levene:** `{p_levene:.3f}`")

    equal_variances = p_levene >= 0.05
    if equal_variances:
        st.info("Como o valor p do Teste de Levene √© maior ou igual a 0.05, n√£o rejeitamos a hip√≥tese nula de vari√¢ncias iguais. O Teste t ser√° executado assumindo vari√¢ncias iguais.")
    else:
        st.warning("Como o valor p do Teste de Levene √© menor que 0.05, rejeitamos a hip√≥tese nula de vari√¢ncias iguais. O Teste t ser√° executado utilizando a corre√ß√£o de Welch (vari√¢ncias desiguais).")

    st.markdown("### Realizando o Teste t Independente:")
    t_statistic, p_value_bilateral = ttest_ind(grupo_a, grupo_b, equal_var=equal_variances)

    mean_a = sum(grupo_a) / len(grupo_a)
    mean_b = sum(grupo_b) / len(grupo_b)

    # Para teste unilateral (H1: media_A > media_B)
    if mean_a > mean_b:
        p_value_unilateral = p_value_bilateral / 2
    else:
        p_value_unilateral = 1 - (p_value_bilateral / 2) # N√£o h√° suporte para H1 na dire√ß√£o desejada

    st.write(f"**Estat√≠stica t do Teste Independente:** `{t_statistic:.2f}`")
    st.write(f"**Valor p (unilateral) do Teste Independente:** `{p_value_unilateral:.3f}`")

    st.subheader("Interpreta√ß√£o dos Resultados do Teste t Independente:")
    if p_value_unilateral < 0.05 and mean_a > mean_b:
        st.success(f"Como o valor p unilateral ({p_value_unilateral:.3f}) √© menor que o n√≠vel de signific√¢ncia (0.05) e a m√©dia do Grupo A ({mean_a:.2f}) √© maior que a do Grupo B ({mean_b:.2f}), rejeitamos a Hip√≥tese Nula.")
        st.write("Isso indica que o novo m√©todo de ensino (Grupo A) **aumentou as notas de forma estatisticamente significativa** em compara√ß√£o ao m√©todo tradicional (Grupo B).")
    else:
        st.info(f"Como o valor p unilateral ({p_value_unilateral:.3f}) √© maior ou igual ao n√≠vel de signific√¢ncia (0.05), ou a m√©dia do Grupo A n√£o √© maior que a do Grupo B, n√£o rejeitamos a Hip√≥tese Nula.")
        st.write("Isso sugere que n√£o h√° evid√™ncia suficiente para afirmar que o novo m√©todo de ensino (Grupo A) aumenta as notas em compara√ß√£o ao m√©todo tradicional (Grupo B).")
    st.markdown("---")

# Execu√ß√£o das fun√ß√µes dos exerc√≠cios
if __name__ == "__main__":
    run_exercise_1()
    run_exercise_2()
    run_exercise_3()

    st.sidebar.title("Sobre a Aplica√ß√£o")
    st.sidebar.info(
        """
        Esta aplica√ß√£o foi criada para demonstrar a aplica√ß√£o de diferentes testes estat√≠sticos
        (ANOVA, Teste t Pareado, Teste t Independente) utilizando dados de exemplos.

        Desenvolvido em Python com as bibliotecas:
        - Streamlit (para a interface web)
        - Pandas (para manipula√ß√£o de dados)
        - Matplotlib e Seaborn (para visualiza√ß√£o)
        - SciPy e Statsmodels (para os testes estat√≠sticos)

        Espero que seja √∫til em seus estudos e projetos, Di√≥genes!
        """
    )